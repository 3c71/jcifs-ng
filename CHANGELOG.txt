jcifs-ng 2.1.0
- Fix file enumeration when entry count exceeds listCount (SMB1, #16) 
- Fix legacy server enumeration (#22)
- Deprecate legacy server enumeration, throw SmbUnsupportedOperation
  when unavailable.
- Support for session reauthentication (#21)
- Android compat by removing JGSS dependency when unneeded (#20)

jcifs-ng 2.0.3
- Fix possible "Message size exceeds maximum buffer size" exceptions
  by properly accounting for buffer padding (#15)

jcifs-ng 2.0.2
- Fix grave memory leak, messages not being removed from response_map (#14)

jcifs-ng 2.0.1
- Fix possible SmbRandomAccessFile read corruption when output buffer size
  greater than read size.
- Fix SmbRandomAccessFile access flags, causing AccessDenied
- Add designated SmbEndOfFileException exception
- Don't throw exception when enumerations don't return any result
- Add a replacing renameTo operation (SMB2 only)

jcifs-ng 2.0.0
- Add SMB2 support (2.02 protocol level), optional for now (jcifs.smb.client.enableSMB2)
- Some work on the DFS code, improving efficiency and fixing some bugs. 
- Honor CIFS request multiplexing limits
- Improved multi-address retry logic (prefer a working connection over a broken one)
- Further refactoring, some more tests
- Server-side copy support (SMB2 only)
- Fix busy looping of disconnected transports.
- Cancel notify requests using cancel command (so that it properly works with samba, too)

jcifs-ng 1.6.0 (unreleased)
- Completely overhaul the way SMB resources are used
 - Idle disconnects will no longer break active resources (by default this means file descriptors), that behavior induced 
   a wide range of potential bugs, including broken file locks and race conditions resulting in SMB errors.
 - File descriptors are no longer magically shared through SmbFile. 
 - Every occasion where a file descriptor is used now returns a handle object controlling it's lifetime.
 - An optional mode (jcifs.smb.client.strictResourceLifecycle=true) to also prevent disconnecting trees that are still in use.
- Refactoring of SmbFile breaking it up into smaller parts with clearer responsibilities.
- Further refactoring for clean API/implementation split.
- Do not retry requests when there is no way they ever could succeed.
- Increased test coverage, fix some issues with legacy connections found through that.
- Change logging to use SLF4J facade
- Copy operations now use SmbFileInput/OutputStream and therefor can use LargeX
- Streaming enumeration operations

jcifs-ng 1.5.3
- Fix thread leak when establishing a connection fails
- Add mitigation against idle timeout issues that cause serious bugs in some usage scenarios:
 - Session timeout can be configured (jcifs.smb.client.sessionTimeout, in ms) setting it to 0 disables session timeout
 - Transport idle timeouts can be disabled (jcifs.smb.client.noIdleTimeout=true)
- Fix bug that exclusive transport connections could be reused.

jcifs-ng 1.5.2
- Fix SmbFile(String) constructor to allow passing credentials in URL.
- Mark already deprecated NTLM filter/servlets @Deprecated
- Fix some porting errors in NtlmHttpURLConnection, pass through a couple of
  more HttpURLConnection settings.
- Mark NtlmHttpURLConnection @Deprecated for it's inherent design and security 
  issues. Add a warning to the documentation.

jcifs-ng 1.5.1
- Fix bundle manifest errors
- Dont wait for response timeout when the transport connection is closed. 
- Fallback to secondary port on any IOException during negotiation.
- Fix NTLMSSP anonymous auth, by default use Extended Security for everything.
- Fix SPNEGO NTLM fallback, add option to disable (jcifs.smb.allowNTLMFallback)
- Yet anther signing sequence fix.
- Work-around DFS+kerberos problems, add option to heuristically convert NetBIOS names to FQDN (set jcifs.smb.client.dfs.convertToFQDN=true to enable)  
- Properly fix domain referrals. Cache DC referrals.
- Some more reliability with random disconnects.
- Security hardening:
 - enforce SMB signing by default for IPC connections, relates to CVE-2016-2115 (jcifs.smb.client.ipcSigningEnforced=false to disable)
 - Allow enforcement of Extended Security (SPNEGO) (jcifs.smb.client.forceExtendedSecurity=true to enable)
